# Generated by Django 4.2.10 on 2024-08-26 08:04

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='HotelSearch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region_id', models.IntegerField()),
                ('checkin', models.DateField()),
                ('checkout', models.DateField()),
                ('guests', models.JSONField()),
                ('language', models.CharField(max_length=2)),
                ('currency', models.CharField(max_length=3)),
                ('residency', models.CharField(max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='PartnerOrderId',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('partner_order_id', models.CharField(blank=True, max_length=255, null=True)),
                ('order_id', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Дата изменения')),
            ],
            options={
                'verbose_name': 'Идентификатор партнерского заказа',
                'verbose_name_plural': 'Идентификатор партнерского заказа',
                'db_table': 'partner_order_id',
                'indexes': [models.Index(fields=['partner_order_id', 'order_id'], name='partner_ord_partner_db2f2c_idx')],
            },
        ),
        migrations.CreateModel(
            name='HotelOrderHistory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Дата изменения')),
                ('order_id', models.IntegerField(blank=True, null=True)),
                ('order_status', models.CharField(blank=True, max_length=255, null=True)),
                ('order_cost', models.FloatField(blank=True, null=True)),
                ('guest_full_name', models.CharField(blank=True, max_length=255, null=True)),
                ('check_in', models.DateField(auto_now_add=True, null=True)),
                ('check_out', models.DateField(auto_now_add=True, null=True)),
                ('hotel_name', models.CharField(blank=True, max_length=255)),
                ('room_name', models.CharField(blank=True, max_length=255)),
                ('country', models.CharField(blank=True, max_length=255)),
                ('city', models.CharField(blank=True, max_length=255)),
                ('free_cancelation', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AirTicketStatusToken',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Дата изменения')),
                ('token', models.IntegerField(blank=True, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AirticketHistory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Дата изменения')),
                ('passengers', models.JSONField(blank=True, null=True)),
                ('token', models.IntegerField(blank=True, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AirCityCodes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(max_length=255)),
                ('airport', models.CharField(max_length=255)),
                ('code', models.CharField(max_length=3)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Дата изменения')),
            ],
            options={
                'verbose_name': 'airport_code_list',
                'verbose_name_plural': 'airport_code_list',
                'db_table': 'airport_code_list',
                'indexes': [models.Index(fields=['country', 'airport', 'code'], name='airport_cod_country_f63421_idx')],
            },
        ),
        migrations.CreateModel(
            name='ClientSpentDeposit',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Дата изменения')),
                ('amout', models.FloatField()),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Баланс spent клиента',
                'verbose_name_plural': 'Баланс spent клиента',
                'db_table': 'client_spent_deposit',
                'indexes': [models.Index(fields=['user'], name='client_spen_user_id_b0578f_idx')],
            },
        ),
        migrations.CreateModel(
            name='ClientDeposit',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Дата изменения')),
                ('amout', models.FloatField()),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Баланс клиента',
                'verbose_name_plural': 'Баланс клиента',
                'db_table': 'client_balance',
                'indexes': [models.Index(fields=['user'], name='client_bala_user_id_6064d9_idx')],
            },
        ),
    ]
